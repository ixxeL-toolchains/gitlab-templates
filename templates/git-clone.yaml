.git-clone:
  image: alpine/git:latest
  variables:
    GIT_TOKEN: ''
    REPO_URL: ''
    REPO_BRANCH: 'main'
    REPO_DEPTH: '1'
    CLONE_DIR: 'git/'
  script:
    - |-
      RED="\033[1;31m"
      GREEN="\033[1;32m"
      YELLOW="\033[1;33m"
      BLUE="\033[1;34m"
      PURPLE="\033[1;35m"
      CYAN="\033[1;36m"
      BLANK="\033[0m"
      set +e

      echo -e "${BLUE}[ STEP - CLONING GIT REPO ] > Cloning repo ${REPO_URL}${BLANK}"
      echo -e "${CYAN}[ INFO ] > Git version.${BLANK}"
      git version
      echo -e "${YELLOW}[ EXECUTING ] > Cloning the repo ${REPO_URL} branch [${REPO_BRANCH}] with depth ${REPO_DEPTH} in [${CLONE_DIR}] directory.${BLANK}"

      if [[ -z ${GIT_TOKEN} ]]
      then
        echo -e "${CYAN}[ INFO ] > No token provided, cloning without authentication.${BLANK}"
        CLONE_URL=${REPO_URL}
      else
        echo -e "${CYAN}[ INFO ] > Token has been provided, cloning with authentication.${BLANK}"
        CLONE_URL=$(echo "${REPO_URL}" | sed "s/https:\/\//&${GIT_TOKEN}@/")
      fi

      git clone --depth ${REPO_DEPTH} --branch ${REPO_BRANCH} ${CLONE_URL} ${CLONE_DIR}

      if [[ $? = 0 ]]
      then
        echo -e "${GREEN}[ SUCCESS ] > Git repo ${REPO_URL} cloned in ${CLONE_DIR} directory.${BLANK}"
      else
        echo -e "${RED}[ FAIL ] > Git repo ${REPO_URL} cloning failed !.${BLANK}"
        exit 1
      fi
      ls -lta ${CLONE_DIR}
      git -C ${CLONE_DIR} status
